CIDR - IPv4

 - Classless Inter-Domain Routing - a method for allocating IP addresses
 - CIDRs help to define an IP address range:
    1. We've seen 11.22.33.44.55/32 => one IP
    2. We've seen 0.0.0.0/0 => all IPs
    3. But we can define: 192.168.0.0/26 => 192.168.0.0 - 192.168.0.63 (64 IP address range)
 - A CIDR has two components:
    1. Base IP:
       - Represents an IP contained in the range (XX.XX.XX.XX)
       - Example: 10.0.0.0 or 192.168.0.0
    2. Subnet Mask:
       - Defines how many bits can change in the IP
       - Example /0 or /24 or /32
       - Can take two forms:
          1. /8 <=> 255.0.0.0
          2. /16 <=> 255.255.0.0
          3. /24 <=> 255.255.255.0
          4. /32 <=> 255.255.255.255

 - CIDR - Subnet Mask:
 - The Subnet Mask basically allows part of the underlying IP to get additional next values from the base IP

   192.168.0.0/32 => allows for 1 IP (2^0) ------> 192.168.0.0
   192.168.0.0/31 => allows for 2 IP (2^1) ------> 192.168.0.0 -> 192.168.0.1
   192.168.0.0/30 => allows for 4 IP (2^2) ------> 192.168.0.0 -> 192.168.0.3
   192.168.0.0/29 => allows for 8 IP (2^3) ------> 192.168.0.0 -> 192.168.0.7
   192.168.0.0/28 => allows for 16 IP (2^4) ------> 192.168.0.0 -> 192.168.0.15
   192.168.0.0/27 => allows for 32 IP (2^5) ------> 192.168.0.0 -> 192.168.0.31
   192.168.0.0/26 => allows for 64 IP (2^6) ------> 192.168.0.0 -> 192.168.0.63
   192.168.0.0/25 => allows for 128 IP (2^7) ------> 192.168.0.0 -> 192.168.0.127
   192.168.0.0/24 => allows for 256 IP (2^8) ------> 192.168.0.0 -> 192.168.0.255
   192.168.0.0/16 => allows for 65,536 IP (2^16) ------> 192.168.0.0 -> 192.168.255.255
   192.168.0.0/0 => allows for All IPs ------> 0.0.0.0 -> 255.255.255.255

 - IPs are made of four Octets:

   123.456.789.0
   (1).(2).(3).(4)

 - /32 - no octet can change
 - /24 - last octet can change
 - /16 - last two octets can change
 - /8 - last 3 octets can change
 - /0 - all octets can change

 - Public vs. Private IP (IPv4):
 - The Internet Assigned Numbers Authority (IANA) established certain blocks of IPv4 addresses for the use of private (LAN) and public (Internet) addresses
 - Private IP can only allow certain values:
    1. 10.0.0.0 - 10.255.255.255 (10.0.0.0/8) - in big networks
    2. 172.16.0.0 - 172.16.255.255 (172.16.0.0/12) - AWS default VPC in that range
    3. 192.168.0.0 - 192.168.255.255 (192.168.0.0/16) - e.g. home networks

 - All the rest of the IP addresses on the Internet are Public

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

AWS VPC

 - VPC = Virtual Private Cloud
 - AWS Default VPC:
 - All new AWS accounts have a default VPC
 - New EC2 instances are launched into the default VPC if no subnet is specified
 - Default VPC has internet connectivity and all EC2 instances inside it have public IPv4 addresses
 - We also get a public and a private IPv4 DNS names


 - User created VPC in AWS:
 - You can have multiple VPCs in an AWS region (max. 5 per region - soft limit)
 - Max. CIDR per VPC is 5, for each CIDR:
    1. Min. size is /28 (16 IP addresses)
    2. Max. size is /16 (65536 IP addresses)
 - Because VPC is private, only the Private IPv4 ranges are allowed:
    1. 10.0.0.0 - 10.255.255.255 (10.0.0.0/8)
    2. 172.16.0.0 - 172.31.255.255 (172.16.0.0/12)
    3. 192.168.0.0 - 192.168.255.255 (192.168.0.0/16)

 - Your VPC CIDR should NOT overlap with your other networks (e.g. corporate)

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

VPC Subnet

 - AWS reserves 5 IP addresses (first 4 & last 1) in each subnet
 - These 5 IP addresses are not available for use and can't be assigned to an EC2 instance
 - Example: if CIDR block 10.0.0.0/24, then reserved IP addresses are:
    1. 10.0.0.0 -  Network Address
    2. 10.0.0.1 - reserved by AWS for the VPC router
    3. 10.0.0.2 - reserved by AWS for mapping to Amazon-provided DNS
    4. 10.0.0.3 - reserved by AWS for future use
    5. 10.0.0.255 - Network Broadcast Address. AWS does not support broadcast in a VPC, therefore the address is reserved

 - Exam Tip:
 - If you need 29 IP addresses for EC2 instances (5 addresses are always reserved):
    1. You can't choose a subnet of size /27 (32 IP addresses, 32-5=27<29)
    2. You need to choose a subnet size /26 (64 IP addresses, 64-5=59>29)

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Internet Gateway (IGW)

 - Allows resources (e.g., EC2 instances) in a VPC to connect to the Internet
 - It scales horizontally and is highly available and redundant
 - Must be created separately from a VPC
 - One VPC can have only one IGW attached and vice versa
 - Internet Gateways on their own do not allow internet access..
 - Route tables must also be edited!
 - Diagram:

   Internet <---(www)---> Internet Gateway <------> Router <------> EC2 instance (public)

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Bastion Hosts

 - A Bastion Host is an EC2 instance that lives within the Public Subnet
 - We can use Bastion Host to SSH into our private EC2 instances (in Private Subnet)
 - The bastion is in the public subnet, which is then connected to all other private subnets
 - Bastion Host security group must allow inbound from the Internet on port 22 from restricted CIDR, for example, the public CIDR of your corporation
 - Security Group of the EC2 Instances must allow the Security Group of the Bastion Host, or the private IP of the Bastion host
 - Diagram:

   Users ---(SSH)---> EC2 Bastion Host ---(SSH)---> Private EC2 instance/s

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

NAT Instance (outdated, but still in the exam)

 - NAT = Network Address Translation
 - Allows EC2 instance in private subnets to connect to the Internet
 - Must be launched in a public subnet
 - Must disable EC2 setting: Source / destination Check
 - Must have Elastic IP attached to it
 - Route Tables must be configured to route traffic from private subnets to the NAT Instance
 - NAT instances re-write packets that are being sent within the VPC
 - They change the source and destination IP addresses of the sent packets
 - When a packet is sent from a private instance, its source IP is the private instance IP
 - Once the NAT instance re-writes the packet, its source IP is changed to be the NAT instance IP
 - The destination IP is that of the Server
 - When a response from the server is returned, the destination is the NAT instance IP
 - The NAT instance then changes the destination IP to the private IP of the private EC2 instance
 - NOTE: You must stop source / destination checking, as a NAT instance must be able to send and receive traffic when the source or destination is not itself

 - NAT Instance - Comments:
 - Pre-configured Amazon Linux AMI is available
    1. Reached the end of standard support on Dec. 31, 2020
 - Not highly available / resilient setup out of the box
    1. You need to create an ASG in multi-AZ + resilient user-data script
 - Internet traffic bandwidth depends on EC2 instance type
 - You must manage Security Groups & rules:
    1. Inbound:
       - Allow HTTP / HTTPS traffic coming from Private Subnets
       - Allow SSH from your home network (access is provided through Internet Gateway)
    2. Outbound:
       - Allow HTTP / HTTPS traffic to the Internet

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

NAT Gateway

 - AWS-managed NAT, higher bandwidth, high availability, no administration
 - Pay per hour for usage and bandwidth
 - NATGW is created in a specific AZ, uses an Elastic IP
 - Can't be used by EC2 instance in the same subnet (only from other subnets)
 - Requires an IGW (Private Subnet => NATGW => IGW)
 - 5 Gbps of bandwidth with automatic scaling up to 100 Gbps
 - No Security Groups to manage / required
 - Diagram:

   Internet <---(www)---> Internet Gateway <------> Router <------> NAT Gateway <------> Private EC2 instance

 - In the above, the NAT Gateway lives in the public subnet, while the private EC2 instance lives in the private subnet

 - NAT Gateway with High Availability:
 - NAT Gateway is resilient within a single AZ
 - Must create multiple NAT Gateways in multiple AZs for fault-tolerance
 - There is no cross-AZ failover needed because if an AZ goes down, it doesn't need NAT

 - NAT Gateway vs. NAT Instance:
 - NAT Gateway:
    1. Availability - Highly available within AZ (create in another AZ)
    2. Bandwidth - Up to 100 Gbps
    3. Maintenance - Managed by AWS
    4. Cost - Per hour & amount of data transferred
    5. Public IPv4 - Yes
    6. Private IPv4 - Yes
    7. Security Groups - No
    8. Use as Bastion Host? - No
 - NAT Instance:
    1. Availability - Use a script to manage failover between instances
    2. Bandwidth - Depends on EC2 instance type
    3. Maintenance - Managed by you (software, OS pathces, etc..)
    4. Cost - Per hour, EC2 instance type and size + network $
    5. Public IPv4 - Yes
    6. Private IPv4 - Yes
    7. Security Groups - Yes
    8. Use as Bastion Host? - Yes

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Security Groups & NACLs

 - Network Access Control List (NACL)
 - NACL are like a firewall, which controls traffic from and to subnets
 - One NACL per subnet, new subnets are assigned the Default NACL
 - You define NACL Rules:
    1. Rules have a number (1-32766), higher precedence with a lower number
    2. First rule match will drive the decision
    3. Example: if you define #100 ALLOW 10.0.0.10/32 and #200 DENY 10.0.0.10/32, the IP address will be allowed because 100 has a higher precedence over 200
    4. The last rule is an asterisk (*) and denies a request in case of no rule match
    5. AWS recommends adding rules by increment of 100
 - Newly created NACLs will deny everything
 - NACLs are a great way of blocking a specific IP address at the subnet level

 - Default NACL:
 - Accepts everything inbound/outbound with the subnets it's associated with
 - Do NOT modify the Default NACL, instead create custom NACLs

 - Ephemeral Ports:
 - For any two endpoints to establish a connection, they must use ports
 - Clients connect to a defined port, and expect a response on an ephemeral port
 - Different Operating Systems use different port ranges, examples:
    1. IANA & MS Windows 10 -> 49152 - 65535
    2. Many Linux Kernels -> 32768 - 60999
 - Diagram:
 - Client has:
    1. IP - 11.22.33.44
    2. Ephemeral Port: 50105
 - Web Server has:
    1. IP - 55.66.77.88
    2. Fixed Port: 443

   Client ---(Src. IP, Src. Port, Dest. IP, Dest. Port, Payload)---> Web Server

   Web Server ---(Src. IP, Src. Port, Dest. IP, Dest. Port, Payload)---> Client

 - Security Group vs. NACLs:
 - Security Group:
    1. Operates at the instance level
    2. Supports allow rules only
    3. Stateful: return traffic is automatically allowed, regardless of any rules
    4. All rules are evaluated before deciding whether to allow traffic
    5. Applies to an EC2 instance when specified by someone
 - NACL:
    1. Operates at the subnet level
    2. Supports allow rules and deny rules
    3. Stateless: return traffic must be explicitly allowed by rules (thing of ephemeral ports)
    4. Rules are evaluated in order (lowest to highest) when deciding whether to allow traffic, firts match wins
    5. Automatically applies to all EC2 instances in the subnet that it's associated with

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

VPC Peering

 - Privately connect two VPCs using AWS network
 - Make them behave as if they were in the same network
 - Must not have overlapping CIDRs
 - VPC Peering connection is NOT transitive (must be established for each VPC that need to communicate with one another)
 - You can have a peering connection between VPC A - B and then between B - C
 - The peering connection however is not transferred, so to have a connection from A - C, you must establish separate peering for it
 - You must update the route tables in each VPC's subnets to ensure EC2 instances can communicate with each other

 - VPC Peering - Good to Know:
 - You can create VPC Peering connection between VPCs in different AWS accounts/regions
 - You can reference a security group in a peered VPC (works cross accounts - same region)

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

VPC Endpoints (AWS PrivateLink)

 - Every AWS service is publicly exposed (public URL)
 - VPC Endpoints (powered by AWS PrivateLink) allows you to connect to AWS services using a private network instead of the public Internet
 - They're redundant and scale horizontally
 - They remove the need of IGW, NATGW, ... to access AWS Services
 - In case of issues:
    1. Checl DNS Setting Resolution in your VPC
    2. Check Route Tables

 - Types of Endpoints:
    1. Interface Endpoints (powered by PrivateLink):
       - Provisions an ENI (private IP address) as an entry point (must attach a Security Group)
       - Supports most AWS services
       - $ per hour + $ per GB of data processed
    2. Gateway Endpoints:
       - Provisions a gateway and must be used as a target in a route table (does not use security groups)
       - Supports both S3 and DynamoDB
       - Free

 - Gateway or Interface Endpoint for S3?
 - Gateway is most likely going to be preferred all the time at the exam
 - Cost: free for Gateway, $ for interface endpoint
 - Interface Endpoint is preferred access is required from on-premises (Site to Site VPN or Direct Connect), a different VPC or a different region

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

VPC Flow Logs

 - Capture information about IP traffic going into your interfaces:
    1. VPC Flow Logs
    2. Subnet Flow Logs
    3. Elastic Network Interface (ENI) Flow Logs
 - Helps monitor & troubleshoot connectivity issues
 - Flow logs data can go to S3, CloudWatch Logs, and Kinesis Data Firehose
 - Captures network information from AWS managed interfaces too: ELB, RDS, ElastiCache, Redshift, WorkSpaces, NATGW, Transit Gateway...
 - VPC Flow Logs Syntax is specifically formatted and has the following:
    1. version
    2. account-id
    3. interface-id
    4. srcaddr
    5. dstaddr
    6. srcport
    7. dstport
    8. protocol
    9. packets
    10. bytes
    11. start
    12. end
    13. action
    14. log-status
 - This is metadata that is in your packets that enter your VPC
 - srcaddr & dstaddr - help identify problematic IP address
 - srcport & dstport - help identify problematic ports
 - Action - success or failure of the request due to Security Group / NACL
 - Can be used for analytics on usage patterns, or malicious behavior
 - Query VPC flow logs using Athena on S3 or CloudWatch Logs Insights

 - VPC Flow Logs - Troubleshoot SG & NACL issues:
 - Look at the "ACTION" field
 - incoming requests:
    1. Inbound Reject => NACL or SG
    2. Inbound ACCEPT, Outbound REGECT => NACL (due to NACL being stateless)
 - Outgoing Requests:
    1. Outbound REJECT => NACL or SG
    2. Outbound ACCEPT, Inbound REJECT => NACL (due to NACL being stateless)
   
 - VPC Flow Logs - Architectures:
 - Diagram:

   VPC Flow Logs ------> CloudWatch Logs ------> CloudWatch Contributor Insights ------> Top 10 IP addresses
 - or
   VPC Flow Logs ------> CloudWatch Logs ---(metric filter)---> CW Alarm ---(Alert)---> Amazon SNS
 - or
   VPC Flow Logs ------> S3 Bucket ------> Amazon Athena ---(visualize)---> Amazon QuickSight

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Site to Site VPN, Virtual Private Gateway & Customer Gateway

 - AWS Site-to-Site VPN:
 - Virtual Private Gateway (VPG):
    1. VPC concentrator on the AWS side of the VPN connection
    2. VGW is created and attached to the VPC from which you want to create the Site-to-Site VPC connection
    3. Possibility to customize the ASN (Autonomous System Number)
 - Customer Gateway (CGW):
    1. Software application or physical device on customer side of the VPN connection
 - Site-to-Site VPC Connections:
 - Customer Gateway Device (On-prem)
    1. What IP address to use?:
       - Public Internet-routable IP address for your Customer Gateway device
       - If it's behind a .NAT device that's enabled for NAT traversal (NAT T), use the public IP address of the NAT device

 - IMPORTANT: enable Route Propagation for the Virtual Private Gateway in the route table that is associated with your subnets
 - If you need to ping your EC2 instances from on-premises to AWS, make sure you add the ICMP protocol on the inbound of your security groups

 - AWS VPN CloudHub:
 - Provide secure communication between multiple sites, if you have multiple VPN connections
 - Low-cost hub-and-spoke model for primary or secondary network connectivity between different locations (VPN only)
 - To set it up, connect with multiple VPN connections on the same VGW, setup dynamic routing and configure route tables

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

