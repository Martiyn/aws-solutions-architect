Disaster Recovery in AWS

 - Any event that has a negative impact on a company's business continuity or finances is a disaster
 - Disaster Recovery (DR) is about preparing for and recovering from a disaster
 - What kind of disaster recovery?:
    1. On-premise => On-premise - traditional DR, very expensive
    2. On-premise => AWS Cloud - hybrid recovery
    3. AWS Cloud Region A => AWS Cloud Region B - cloud recovery
 - Need to define two terms:
    1. RPO: Recovery Point Objective
    2. RTO: Recovery Time Objective

 - RPO and RTO:
 - RPO is the points in time that you make backups of your data, time between the RPO and the disaster is a data loss (as all updates since last recovery point have been lost)
 - RTO is the amount of downtime that the application has after experiencing a disaster

 - Disaster Recovery Strategies:
 - Backup and Restore
 - Pilot Light
 - Warm Standby
 - Hot Site / Multi Site Approach

 - In terms of RTO speed, they are as follows:

   ---------------------(Faster RTO)-------------------------->

    Backup & Restore, Pilot Light, Warm Standby, Multi Site

 - The faster the RTO, the higher the cost

 - Backup and Restore (High RPO):
    1. It is very cheap (pay only for the storage of the snapshots)
    2. Has high RPO (can make snapshots often), but low RTO
 - Pilot light:
    1. A small version of the app is always running in the cloud
    2. Useful for the critical core (pilot light)
    3. Very similar to Backup & Restore
    4. Faster than Backup and Restore as critical systems are already up
 - Warm standby:
    1. Full system is up and running, but at minimum size
    2. Upon disaster, we can scale to production load
 - Multi Site / Hot Site Approach:
    1. Very low RTO (minutes or seconds) - very expensive
    2. Full Production Scale is running on AWS and On-prem

 - Disaster Recovery Tips:
 - Backup:
    1. EBS Snapshots, RDS automated backups / Snapshots, etc..
    2. Regular pushes to S3 / S3 IA / Glacier, Lifecycle Policy, Cross Region Replication
    3. From On-Premise: Snowball or Storage Gateway
 - High Availability:
    1. Use Route53 to migrate DNS over from Region to Region
    2. RDS Multi-AZ, ElastiCache Multi-AZ, EFS, S3
    3. Site to Site VPN as a recovery from Direct Connect
 - Replication:
    1. RDS Replication (Cross Region), AWS Aurora + Global Databases
    2. Database replication from on-premise to RDS
    3. Storage Gateway
 - Automation:
    1. CloudFormation / Elastic Beanstalk to re-create a whole new environment
    2. Recover / Reboot EC2 instances with CloudWatch if alarms fail
    3. AWS Lambda functions for customized automations
 - Chaos:
    1. Netflix has a "simian-army" randomly terminating EC2
    2. This essentially testing on Production to ensure that the infrastructure is viable

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DMS - Database Migration Service

 - Quickly and securely migrate databases to AWS, resilient, self-healing
 - The source database remains available during the migration
 - Supports:
    1. Homogenous migrations: ex Oracle to Oracle
    2. Heterogeneous migrations: ex Microsoft SQL Server to Aurora
 - Continuous Data Replication using CDC
 - You must create an EC2 instance to perform the replication tasks

 - DMS Sources and Targets
 - Sources:
    1. On-prem and EC2 instances databases:
       - Oracle
       - MS SQL Server
       - MySQL
       - MariaDB
       - PostgreSQL
       - MongoDB
       - SAP
       - DB2
    2. Azure: Azure SQL Database
    3. Amazon RDS: all including Aurora
    4. Amazon S3
    5. DocumentDB
- Targets:
   1. On-Premises and EC2 instances databases:
      - Oracle
      - MS SQL Server
      - MySQL
      - MariaDB
      - PostgreSQL
      - SAP
   2. Amazon RDS
   3. Redshift, DynamoDB, S3
   4. OpenSearch Service
   5. Kinesis Data Streams
   6. Apache Kafka
   7. DocumentDB & Amazon Neptune
   8. Redis & Babelfish

 - AWS Schema Conversion Tool (SCT):
 - Convert you Database's Schema from one engine to another
 - Example OLTP: (SQL Server or Oracle) to MySQL, PostgreSQL, Aurora
 - Example OLAP: (Teradata or Oracle) to Amazon Redshift
 - You do not need to use SCT if you are migrating the same DB engine
    1. Ex: On-Premise PostgreSQL => RDS PostgreSQL
    2. The DB engine is still PostgreSQL (RDS is the platform)

 - AWS DMS - Multi-AZ Deployment:
 - When Multi-AZ is Enabled, DMS provisions and maintains a synchronously stand replica in a different AZ
 - Advantages:
    1. Provides Data Redundancy
    2. Eliminates I/O freezes
    3. Minimizes latency spikes

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

RDS & Aurora MySQL Migrations

 - RDS MySQL to Aurora MySQL:
    1. Option 1: DB Snapshots from RDS MySQL restored as MySQL Aurora DB
    2. Option 2: Create an Aurora Read Replica from your RDS MySQL, and when the replication lag is 0, promote it as its own DB cluster (can take time and cost $)
 - External MySQL to Aurora MySQL:
    1. Option 1:
       - Use Percona XtraBackup to create a file backup in Amazon S3
       - Create an Aurora MySQL DB from Amazon S3
    2. Option 2:
       - Create an Aurora MySQL DB
       - Use the mysqldump utility to migrate MySQL into Aurora (slower than S3 method)
 - Use DMS if both databases are up and running

 - RDS & Aurora PostgreSQL Migrations:
    1. Option 1: DB Snapshots from RDS PostgreSQL restored as PostgreSQL Aurora DB
    2. Option 2: Create an Aurora Read Replica from your RDS PostgreSQL, and when the replication lag is 0, promote it as its own DB cluster (can take time and cost $)
 - External PostgreSQL to Aurora PostgreSQL:
    1. Create a backup and put it in Amazon S3
    2. Import it using the aws_s3 Aurora extension
 - Use DMS if both databases are up and running

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

On-Premise strategy with AWS

 - Ability to download Amazon Linux 2 AMI as a VM (.iso format)
    1. VMWare, KVM, VirtualBox (OracleVM), Microsoft Hyper-V
 - VM Import / Export
    1. Migrate existing applications into EC2
    2. Create a DR repository strategy for your on-premise VMs
    3. Can export back the VMs from EC2 to on-premise
 - AWS Application Discovery Service:
    1. Gather information about your on-premise servers to plan a migrations
    2. Server utilization and dependency mappings
    3. Track with AWS Migration Hub
 - AWS Database Migration Service (DMS):
    1. replicate On-premise => AWS, AWS => AWS, AWS => On-premise
    2. Works with various database technologies (Oracle, MySQL, DynamoDB, etc..)
 - AWS Server Migration Service (SMS)
    1. Incremental replication of on-premise live servers to AWS

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

AWS Backup

 - AWS Backup is a Fully managed service
 - Centrally manage and automate backups across AWS services
 - No need to create custom scripts and manual processes
 - Supported services:
    1. Amazon EC2 / Amazon EBS
    2. Amazon S3
    3. Amazon RDS (all DBs engines) / Amazon Aurora / Amazon DynamoDB
    4. Amazon DocumentDB / Amazon Neptune
    5. Amazon EFS / Amazon FSx (Lustre & Windows File Server)
    6. AWS Storage Gateway (Volume Gateway)
 - Supports cross-region backups
 - Supports cross-account backups
 - Supports point-in-time recovery (PITR) for supported services
 - On-Demand and Scheduled backups
 - Tag-based backup policies
 - You create backup policies known as Backup Plans:
    1. Backup frequency (every 12 hours, daily, weekly, monthly, cron expression)
    2. Backup window
    3. Transition to Cold Storage (Never, Days, Weeks, Months, Years)
    4. Retention Period (Always, Days, Weeks, Months, Years)

 - AWS Backup Vault Lock:
 - Enforce a Write Once Read Many state for all the backups that you store in your AWS Backup Vault
 - Additional layer of defense to protect your backups against:
    1. Inadvertent or malicious delete operations
    2. Updates that shorten or alter retention periods
 - Even the root user cannot delete backups when enabled

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Application Migration Service (MGN)

 - AWS Application Discovery Service (migration from on-prem to cloud):
 - Plan migration projects by gathering information about on-prem data centers
 - Server utilization data and dependency mapping are important for migrations
 - Agentless Discovery (AWS Agentless Discovery Connector)
    1. VM inventory, configuration, and performance history such as CPU, memory, and disk usage
 - Agent-based Discovery (AWS Application Discovery Agent)
    1. System configuration, system performance, running processes, and details of the network connections between systems
 - Resulting data can be viewed within AWS Migration Hub

 - AWS Application Migration Service (MGN):
 - The "AWS evolution" of CloudEndure Migration replacing AWS Server Migration Service (SMS)
 - Lift-and-shift (rehost) solution which simplifies migrating applications to AWS
 - Converts your physical, virtual, and cloud-based servers to run natively on AWS
 - Supports wide range of platforms, Operating Systems, and databases
 - Minimal downtime, reduced costs

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Transferring Large Datasets into AWS

 - Example: transfer 200 TB of data in the cloud (we have a 100 Mbps internet connection)
 - Over the internet / Site-to-Site VPN:
    1. Immediate to setup
    2. Will take 200(TB) * 1000(GB) * 1000(MB) * 8(Mb) / 100 Mbps = 16,000,000s = 185d
 - Over direct connect 1 Gbps:
    1. Long for one-time setup (over a month)
    2. Will take 200(TB) * 1000(GB) * 1000(MB) * 8(Mb) / 1 Gbps = 1,600,000s = 18.5d
 - Over Snowball:
    1. Will take 2 to 3 snowballs in parallel
    2. Takes about 1 week for the end-to-end transfer
    3. Can be combined with DMS
 - For on-going replication / transfers: Site-to-Site VPN or DX with DMS or DataSync

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

VMware Cloud on AWS

 - Some customers use VMware Cloud to manage their on-premises Data Center
 - They want to extend the Data Center capacity to AWS, but keep using the VMware Cloud software
 - ...Enter VMware Cloud on AWS
 - Use cases:
    1. Migrate your VMware vSphere-based workloads to AWS
    2. Run your production workloads across VMware vSphere-based private, public, and hybrid cloud environments
    3. Have a disaster recover strategy
