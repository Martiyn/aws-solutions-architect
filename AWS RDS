AWS RDS (Relational Database Service)

 - AWS RDS is a managed database service for database use with SQL as the query lanquage
 - RDS allows you to create databases in the cloud that are managed by AWS
 - Supported DB engines are:
    1. Postgres
    2. MySQL
    3. MariaDB
    4. Oracle
    5. Microsoft SQL server
    6. Aurora (AWS proprietary DB)
 - Why it is recommended to use RDS instead of hosting a DB on an EC2 instance:
    1. Automated provisioning and OS patching
    2. Continuous backup and restore to specific timestamps
    3. Monitoring dashboards
    4. Read replicas for improved performance
    5. Multi AZ setup for Disaster Recovery
    6. Maintenance windows for upgrades
    7. Scaling capability (both vertical and horizontal)
    8. Storage backed by EBS (gp2 or io1)
 - NOTE: you cannot SSH to the RDS instances.
 - RDS automatically detects when your DB is running out of storage and auto scales it.
 - It is not recommended to manually scale your DB.
 - A maximum DB storage threshold must be set.

------------------------------------------------------------------------------------------------------------------------------------------------------------------

RDS Read replicas for read scalability

 - Read replicas help you scale your database READS.
 - You can have up to 15 read replicas.
 - Read replicas can be within AZ, cross AZ or cross region.
 - Replication is ASYNC, so reads are eventually consistent (progressively updated).
 - Replicas can be promoted to become their own Database.
 - Applications must update their connection string in order to leverage read replicas.
 - Read replicas can be created to run separate workloads on the same Database (in order to not overload the Database).
 - Read replicas can only be used for SELECT (read) statements so that no DB manipulation can occur (INSERT, DELETE, UPDATE).
 - RDS has a cost when transferring data from one AZ to another.
 - Read replicas in the same region do not have a fee.
 - Read replicas transferred between regions have a fee.

------------------------------------------------------------------------------------------------------------------------------------------------------------------

RDS Multi AZ for disaster recovery

 - RDS Multi AZ is used for disaster recovery (in case the main DB has issues).
 - RDS Multi AZ works SYNC (synchronously).
 - When a change occurs in the main DB, it gets immediately updated to the backup.
 - Multi AZ uses a single DNS name (in case of failure of the main DB, the app automatically connects to the backup).
 - As multi AZ uses multiple availability zones, there is increased availability.
 - Automatic failover in case of loss of AZ, loss of network or instance storage failure.
 - No manual intervention with the apps is required (in case of failure).
 - Not used for scaling (only backup).
 - Read replicas can be setup as multi AZ for disaster recovery.
 - RDS can go from single AZ to multi AZ with zero downtime (no need to stop the DB).

------------------------------------------------------------------------------------------------------------------------------------------------------------------

RDS Custom

 - Managed Oracle and Microsoft SQL Server with OS and DB customization.
 - RDS: Automates setup, operation and scaling of database in AWS.
 - Custom: Access to the underlying OS and DB, so you can:
    1. Configure settings
    2. Install patches
    3. Enable native features
    4. Access the underlying EC2 instance via SSH or SSM Session Manager
 - NOTE: Always deactivate Automation Mode when performing customization (or you could break the DB).
 - Always make a DB snapshot prior to customization.
 - RDS Custom provides absolute admin access to the entire OS and DB.

------------------------------------------------------------------------------------------------------------------------------------------------------------------

RDS Backups

 - Automated backups:
    1. Daily full backup of the database (during the backup window)
    2. Transaction logs are backed up by RDS every 5 minutes
    3. Ability to restore to any point in time (from oldest backup to 5 minutes ago)
    4. 1 to 35 days retention period (set to 0 to disable automated backups)

 - Manual DB snapshots
    1. Manually triggered by the user
    2. Retention backup for as long as you want

 - You can restore an RDS backup or snapshot and create a new DB from it
 - Restoring a MySQL DB from S3:
    1. Create a backup of your on-premises DB
    2. Store the backup on Amazon S3
    3. Restore backup onto a new RDS instance running MySQL
