CloudWatch Metrics

 - CloudWatch provides metrics for every AWS service
 - Metric is a variable to monitor (CPU util, Networking, etc..)
 - Metrics belong to namespaces
 - Dimension is an attribute of a metric (instance id, environment, etc..)
 - Up to 30 dimensions per metric
 - Metrics have timestamps
 - Can create CloudWatch dashboards of metrics
 - Can create CloudWatch Custom Metrics (e.g., for the RAM)

 - CloudWatch Metric Streams:
 - Continually stream CloudWatch metrics to a destination of your choice with near-real-time delivery and low latency
    1. Amazon Kinesis Data Firehose (and then its destinations)
    2. 3rd party service provider: Datadog, Dynatrace, New Relic, Splunk, Sumo logic, etc..

 - Diagram:

   CloudWatch Metrics ---(stream near-real-time)---> Kinesis Data Firehose ------> Amazon S3 ------> Athena 

 - The data is stored in Amazon S3 and can then be analyzed with Athena
 - You can alternatively store your data in Amazon Redshift (data warehouse) - from Firehose
 - You can also route the data from Firehose to Amazon OpenSearch to perform analytics there
 - Option to filter metrics to only stream a subset of them

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CloudWatch Logs

 - Log groups: arbitrary name, usually representing an application that is to be monitored
 - Log stream: instances within application / log files / containers
 - Can define log expiration policies (never expire, 1 day to 10 years)
 - CloudWatch Logs can send logs to:
    1. Amazon S3 (exports)
    2. Kinesis Data Streams
    3. Kinesis Data Firehose
    4. AWS Lambda
    5. OpenSearch
 - Logs are encrypted by default
 - Can setup KMS-based encryption with your own keys

 - CloudWatch Logs - Sources:
    1. SDK
    2. CloudWatch Logs Agent
    3. CloudWatch Unified Agent
    4. Elastic Beanstalk: collection of logs from app
    5. ECS: collection from containers
    6. AWS Lambda: collection from function logs
    7. VPC Flow Logs: VPC specific logs
    8. API Gateway
    9. CloudTrail based on filter
    10. Route 53: Log DNS queries

 - CloudWatch Logs Insights (can be used to query CloudWatch Logs)
 - Search and analyze log data stored in CloudWatch Logs
 - Example: find a specific IP inside a log, count occurrences of "ERROR" in your logs
 - Provides a purpose-built query language:
    1. Automatically discovers fields from AWS services and JSON log events
    2. Fetch desired event fields, filter based on conditions, calculate aggregate statistics, sort events, limit number of events...
    3. Can save queries and add them to CloudWatch Dashboards
 - Can query multiple Log Groups in different AWS accounts
 - It's a query engine, not a real-time engine

 - CloudWatch Logs - S3 Export
 - Log data can take up to 12 hours to become available for export
 - The API call is CreateExportTask
 - Not near-real-time or real-time... use Log Subscribtions instead

 - CloudWatch Logs Subscribtions:
 - Get a real-time log events from CloudWatch Logs for processing an analysis
 - Send to Kinesis Data Streams, Kinesis Data Firehose, or Lambda
 - Subscribtion Filter - filter which logs are events delivered to your destination

 - Diagram

   CloudWatch Logs ---(logs)---> Subscribtion Filter ------> Kinesis Data Streams ------> Kinesis Data Firehose/Kinesis Data Analytics/EC2/Lambda

 - or

   CloudWatch Logs ---(logs)---> Subscribtion Filter ------> Kinesis Data Firehose ---(near-real-time)---> S3/OpenSearch

 - or

   CloudWatch Logs ---(logs)---> Subscribtion Filter ------> Lambda ---(real-time)---> OpenSearch

 - CloudWatch Logs Aggregation is possible from multiple accounts and multiple regions

 - CloudWatch Logs Subscribtions:
 - Cross-account Subscribtions - send log events to resources in a different AWS account (Data Stream, Firehose)
 - You must have a cross-account IAM role and a destination access policy

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CloudWatch Agent & CloudWatch Logs Agent

 - By default, no logs from your EC2 machine will go to CloudWatch
 - You need to run a CloudWatch agent on EC2 to push the log files you want
 - Make sure IAM permissions are correct
 - The CloudWatch log agent can be setup on-prem as well

 - CloudWatch Logs Agent & Unified Agent:
 - For virtual servers (EC2 instances, on-prem servers)
 - CloudWatch Logs Agent:
    1. Old version of the agent
    2. Can only send to CloudWatch Logs
 - CloudWatch Unified Agent:
    1. Collect additional system-level metrics such as RAM, processes, etc..
    2. Collect logs to send to CloudWatch Logs
    3. Centralized configuration using SSM Parameter Store

 - CloudWatch Unified Agent - Metrics
 - Collected directly on your Linux server / EC2 instance
 - CPU (active, guest, idle, system, user, steal)
 - Disk metrics (free, used, total), Disk IO (writes, reads, bytes, iops)
 - RAM (free, inactive, used, total, cached)
 - Netstat (number of TCP and UDP connections, net packets, bytes)
 - Processes (total, dead, bloqued, idle, running, sleep)
 - Swap Space (free, used, used%)

 - Reminder: out-of-the box metrics for EC2 - disk, CPU, network (high level)
 - For more granular logs, you need the CloudWatch Unified Agent

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CloudWatch Alarms

 - Alarms are used to trigger notifications for any metric
 - Various options (sampling, %, max, min, etc..)
 - Alarm states are:
    1. OK
    2. INSUFFICIENT_DATA
    3. ALARM
 - Period:
    1. Length of time in seconds to evaluate the metric
    2. High resolution custom metrics: 10 sec, 30 sec or multiples of 60 sec

 - CloudWatch Alarm Targets:
 - Stop, Terminate, Reboot, or Recover an EC2 instance
 - Trigger Auto Scaling Action
 - Send notification to SNS (from which you can do pretty much anything)

 - CloudWatch Alarms - Composite Alarms:
 - CloudWatch Alarms are on a single metric
 - Composite Alarms are monitoring the states of multiple other alarms
 - AND and OR conditions
 - Helpful to reduce "alarm noise" by creating complex composite alarms

 - EC2 Instance Recovery:
 - Status Check:
    1. Instance status = check the EC2 VM
    2. System status = check the underlying hardware
 - Recovery: Same Private, Public, Elastic IP, metadata, placement group

 - CloudWatch Alarm: good to know
 - Alarms can be created based on CloudWatch Logs Metrics Filters
 - To test alarms and notifications, set the alarm state to Alarm using CLI:

   aws cloudwatch set-alarm-state --alarm-name "myalarm" --state-value ALARM --state-reason "testing purposes"

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Amazon EventBridge (formerly CloudWatch Events)

 - Schedule: Cron jobs (scheduled scripts)
 - Event Pattern: Event rules to react to a service doing something
 - Trigger Lambda functions, send SQS/SNS messages, etc..

 - Amazon EventBridge Rules:
 - EventBridge has sources:
    1. EC2 Instance (ex: Start instance)
    2. CodeBuild (ex: failed build)
    3. S3 Event (ex: upload object)
    4. Trusted Advisor (ex: new finding)
    5. CloudTrail (any API call)
    6. Schedule a Cron (ex: every hour)
 - EventBridge also has destinations:
    1. Lambda
    2. AWS Batch
    3. ECS Task
    4. SQS
    5. SNS
    6. Kinesis Data Stream
    7. Step Functions
    8. CodePipeline
    9. CodeBuild
    10. SSM
    11. EC2 Actions

 - Diagram:

   Source(one of the above listed) ---(optionally filter events)---> Amazon EventBridge ---(send data in JSON format)---> Destination(one of the above listed)

 - Amazon EventBridge is the Default Event Bus
 - Partner event buses can be:
    1. Zendesk
    2. DataDog
    3. etc..
 - Partner event bus allows you to monitor events outside of AWS
 - You also have a custom event bus, which can be your own custom app
 - Event buses can be accessed by other AWS accounts using Resource-based Policies
 - You can archive events (all/filter) sent to an event bus (indefinitely or set period)
 - Ability to replay archived events (handy for debugging/troubleshooting)

 - Amazon EventBridge - Schema Registry
 - EventBridge can analyze the events in your bus and infer the schema
 - The Schema Registry allows you to generate code for your application, that will know in advance how data is structured in the event bus
 - Schema can be versioned

 - Amazon EventBridge - Resource-based Policy:
 - Manage permissions for a specific Event Bus
 - Example: allow/deny events from another AWS account or AWS region
 - Use case: aggregate all events from your AWS Organization in a single AWS account or region

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CloudWatch Container Insights

 - Collect, aggregate, summarize metrics and logs from containers
 - Available for containers on:
    1. Amazon ECS
    2. Amazon EKS
    3. Kubernetes platforms on EC2
    4. Fargate (both for ECS and EKS)
 - In Amazon EKS and Kubernetes, CloudWatch Insights is using a containerized version of the CloudWatch Agent to discover containers

 - CloudWatch Lambda Insights:
 - Monitoring and troubleshooting solution for serverless apps running on AWS Lambda
 - Collects, aggregates, and summarizes system-level metrics including CPU time, memory, disk, and network
 - Collects, aggregates, and summarizes diagnostic information such as cold starts and Lambda worker shutdowns
 - Lambda Insights is provided as a Lambda Layer

 - CloudWatch Contributor Insights:
 - Analyze log data and create time series that display contributor data:
    1. See metrics about the top-N contributors
    2. The total number of unique contributors, and their usage
 - This helps you find top talkers and understand who or what is impacting system performance
 - Works for any AWS-generated logs (VPC, DNS, etc...)
 - For example, you can find bad hosts, identify the heaviest netowork users, or find the URLs that generate the most errors
 - You can build your rules from scratch, or you can also use sample rules that AWS has created - leverages your CloudWatch Logs
 - CloudWatch also provides built-in rulas that you can use to analyze metrics from other AWS services
 - Diagram:

   VPC Flow Logs ------> CloudWatch Logs ------> CloudWatch Contributor Insights ---(top 10 IP addresses)--->

 - CloudWatch Application Insights:
 - Provides automated dashboards that show potential problems with monitored applications, to help isolate ongoing issues
 - Your applications run on Amazon EC2 instances with select technologies only (Java, .NET, Microsoft IIS Web Server, databases, ...)
 - And you can use other AWS resources such as Amazon EBS, RDS, ELB, ASG, Lambda, SQS, DynamoDB, S3 bucket, ECS, EKS, SNS, API Gateway, ..
 - Powered by SageMaker
 - Enhanced visibility into your application health to reduce the time it will take you to troubleshoot and repair your applications
 - Findings and alerts are sent to Amazon EventBridge and SSM OpsCenter

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

AWS CloudTrail

 - Provides governance, compliance and audit for your AWS Account
 - CloudTrail is enabled by default
 - Get a history of events / API calls made withing your AWS account by:
    1. Console
    2. SDK
    3. CLI
    4. AWS Services
 - Can put logs from CloudTrail into CloudWatch Logs or S3
 - A trail can be applied to All Regions (default) or a single region
 - If a resource is deleted in AWS, investigate CloudTrail first!
 - Diagram:

   SDK/CLI/Console/IAM users & IAM roles ------> CloudTrail Console(inspect & audit) ------> CloudWatch Logs/S3 bucket

 - CloudTrail Events:
 - Management Events:
    1. Operations that are performed on resources in your AWS account
    2. Examples:
       - Configuring security (IAM AttachRolePolicy)
       - Configuring rules for routing data (Amazon EC2 CreateSubnet)
       - Setting up logging (AWS CloudTrail CreateTrail)
    3. By default, trails are configured to log management events
    4. Can separate Read Events from Write Events
 - Data Events:
    1. By default, data events are not logged because they are very high volume operations
    2. Amazon S3 object-level activity (ex: GetObject, DeleteObject, PutObject): can separate Read and Write Events
    3. AWS Lambda function execution activity (the Invoke API)

 - CloudTrail Insights:
 - Enable CloudTrail Insights to detect unusual activity in your account:
    1. Inaccurate resource provisioning
    2. Hitting service limits
    3. Bursts of AWS IAM actions
    4. Gaps in periodic maintenance activity
 - CloudTrail Insights analyzes normal management events to create a baseline
 - And then continuously analyzes write events to detect unusual patterns
    1. Anomalies appear in the CloudTrail console
    2. Event is sent to Amazon S3
    3. An EventBridge event is generated

 - CloudTrail Events Retention:
 - Events are stored for 90 days in CloudTrail
 - To keep events beyond this period, log them to S3 and use Athena

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


