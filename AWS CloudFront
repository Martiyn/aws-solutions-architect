AWS CloudFront

 - Cloudfront is a Content delivery network (CDN)
 - Improves read performance, content is cached at the edge
 - Improves user experience by lowering latency
 - 216 points of presence (edge locations)
 - DDoS protection (because it is worldwide)
 - Integration with Shield and AWS Web Application Firewall


 - Cloudfront - Origins:
    1. S3 bucket:
       - For distributing files and caching them at the edge location
       - Enhanced security with CloudFront Origin Access Control (OAC)
       - OAC is replacing Origin Access Identity (OAI)
       - CloudFront can be used as an ingress (to upload files to S3)
       - S3 bucket must have a policy configured to allow CloudFront access
    2. Custom Origin (HTTP):
       - Application load balancer
       - EC2 instance
       - S3 website (must first enable the bucket as a static S3 website)
       - Any HTTP backend you want


- How CloudFront works:
    1. Content from an S3 bucket(origin) is sent to the Edge location and cached
    2. A request is made to retrieve content from an S3 bucket
    3. The request is routed to the edge location (as it is closer, thus reducing latency)
    4. If the content is not in the cache, then it is fetched from the S3 bucket 

 - CoudFront vs S3 Cross-region replication:
    1. CloudFront:
       - Global Edge network
       - Files are cached for a TTL (maybe a day)
       - Great for static content that must be available everywhere
    2. Cross region replication:
       - Must be setup for each region in which you want replication to happen
       - Files are updated in ner real-time (no caching)
       - Read only
       - Great for dynamic content that needs to be available at low-latency in few regions


 - CloudFront - ALB or EC2 as an origin:
    1. EC2:
       - EC2 must be configured to allow the public IP of the Edge locations
       - Configuration works via EC2 Security groups (set to allow the IP)
       - EC2 instance must be public
    2. ALB:
       - ALB must be public
       - EC2 instances behind the ALB can be private, as the ALB can connect to private resources
       - ALB must be configured to allow the public IP of the Edge locations
       - Configuration works via ALB Security groups (set to allow the IP) 


 - CloudFront Geo restriction:
 - You can restrict who can access your distribution (based on country):
    1. Allowlist: Allow your users to access content if they're in one of the countries on the approved list
    2. Blocklist: Prevent your users from accessing content if they're in one of the countries on the banned list
 - The "country" is determined using a 3rd party Geo-IP database
 - Use case: Copyright laws to restrict access to content


 - CloudFront - Pricing (price classes):
 - Edge locations are all around the world, thus the cost of data per edge location varies
 - You can reduce the number of edge locations for cost reduction
 - Three price classes available:
    1. Price class All: all regions - best performance
    2. Price class 200: most regions, but excludes most expensive regions
    3. Price class 100: only the least expensive regions


 - CloudFront - Cache invalidations
 - In case you update the back-end origin, CloudFront doesn't know about it and will only get refreshed content after expired TTL
 - You can force an entire or partial cache refresh (bypassing the TTL) by performing a CloudFront invalidation
 - You can invalidate all files (*) or a particular path (/images/*)
 - When the files are invalidated, the cache fetches files again

----------------------------------------------------------------------------------------------------------------------------------------------

AWS Global Accelerator

- Unicast vs Anycast IP:
    1. Unicast IP:
       - one server holds one IP address

    2. Anycast IP:
       - all servers hold the same IP address and the client is routed to the nearest one

 - AWS Global Accelerator leverages the AWS internal network to route to your application
 - 2 Anycast IP are created for your application
 - The Anycast IP send traffic directly to edge locations
 - The Edge locations send the traffic to your application
 - Extremely useful for when you have an application deployed in e.g. India, but users need to access it globally
 - When users attempt to access the application from the US, while it is hosted in India:
    1. They usually use the public internet, which means that they go through many "hops"
       - Hops add much latency, as the connection hops between servers and routers due to the distance

 - AWS Global accelerator works with Elastic IP, EC2 instances, ALB, NLB, can be public or private
 - Consistent performance
 - Intelligent routing to the lowest latency and fast regional failover
 - No issue with client cache (because the IP doesn't change)
 - Uses internal AWS network
 - Global Accelarator can also perform health checks for your applications
 - Helps make your application global (failover less than a minute for unhealthy)
 - It is great for disaster recovery (thanks to the health checks)
 - It is also extremely secure, as it only requires 2 external IPs to be whitelisted
 - Automatic DDoS protection thanks to AWS Shield


 - Gloabl Accelerator vs CloudFront:
 - Both of them use the AWS global network and its edge locations around the world
 - Both integrate with AWS Shield for DDoS protection
    1. CloudFront:
       - Improves performance for both cacheable content (like images and videos)
       - Also improves performance for Dynamic content (like API acceleration and dynamic site delivery)
       - Content is served at the edge location
    2. Gloval Accelerator:
       - Improves performance for a wide range of applications over TCP or UDP
       - Proxying packets at the edge to applications running in one or more AWS regions
       - Good fit for non-HTTP use cases, such as gaming (UDP), IoT (MQTT), or Voice over IP
       - Good for HTTP use cases that require static IP addresses
       - Good for HTTP use cases that required deterministic, fast regional failover
